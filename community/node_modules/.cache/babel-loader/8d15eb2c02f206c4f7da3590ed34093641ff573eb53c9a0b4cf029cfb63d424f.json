{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Parul Pandey\\\\Dropbox\\\\PC\\\\Desktop\\\\CCH\\\\Community-Connect\\\\community\\\\src\\\\components\\\\form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [user, setUser] = useState({\n    Name: '',\n    Email: '',\n    Contact: '',\n    message: ''\n  });\n  const data = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  const loadScript = src => {\n    return new Promise((resolve, reject) => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = resolve;\n      script.onerror = reject;\n      document.body.appendChild(script);\n    });\n  };\n  const displayRazorpay = async (amount, successCallback) => {\n    try {\n      await loadScript('https://checkout.razorpay.com/v1/checkout.js');\n      const options = {\n        // Razorpay options here\n\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n          alert(\"Payment Successful\");\n          // After successful payment, call the success callback\n          successCallback();\n        }\n      };\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    } catch (error) {\n      alert(\"Failed to load Razorpay SDK\");\n    }\n  };\n  const submitForm = async () => {\n    const {\n      Name,\n      Email,\n      Contact,\n      message\n    } = user;\n    if (!Name || !Email || !Contact || !message) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n\n    // Call the Razorpay function to initiate the payment and provide a callback function\n    displayRazorpay(1000, () => {\n      // Proceed with the form submission\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Name,\n          Email,\n          Contact,\n          message\n        })\n      };\n      try {\n        fetch('https://donationfirebase-default-rtdb.firebaseio.com/UserData.json', options).then(res => {\n          if (res.ok) {\n            alert(\"Message Sent\");\n          } else {\n            alert(\"Error Occurred\");\n          }\n        }).catch(error => {\n          alert(\"An error occurred while submitting the form.\");\n          console.error(error);\n        });\n      } catch (error) {\n        alert(\"An error occurred while submitting the form.\");\n        console.error(error);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Name\",\n            placeholder: \"Your Name\",\n            value: user.Name,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"Email\",\n            placeholder: \"Email-id\",\n            value: user.Email,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Contact\",\n            placeholder: \"Contact no.\",\n            value: user.Contact,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            placeholder: \"Enter Your Message\",\n            value: user.message,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitForm,\n            children: \"Submit and Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Form, \"fHalAoBguYeP93k5Rahv4fyg2IY=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","user","setUser","Name","Email","Contact","message","data","e","target","name","value","loadScript","src","Promise","resolve","reject","script","document","createElement","onload","onerror","body","appendChild","displayRazorpay","amount","successCallback","options","handler","response","alert","razorpay_payment_id","paymentObject","window","Razorpay","open","error","submitForm","method","headers","JSON","stringify","fetch","then","res","ok","catch","console","children","className","type","placeholder","autoComplete","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Parul Pandey/Dropbox/PC/Desktop/CCH/Community-Connect/community/src/components/form.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './form.css';\r\n\r\nconst Form = () => {\r\n    const [user, setUser] = useState({\r\n        Name: '',\r\n        Email: '',\r\n        Contact: '',\r\n        message: ''\r\n    });\r\n\r\n    const data = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const loadScript = (src) => {\r\n        return new Promise((resolve, reject) => {\r\n            const script = document.createElement('script');\r\n            script.src = src;\r\n            script.onload = resolve;\r\n            script.onerror = reject;\r\n            document.body.appendChild(script);\r\n        });\r\n    };\r\n\r\n    const displayRazorpay = async (amount, successCallback) => {\r\n        try {\r\n            await loadScript('https://checkout.razorpay.com/v1/checkout.js');\r\n            const options = {\r\n                // Razorpay options here\r\n                \r\n                handler: function (response) {\r\n                    alert(response.razorpay_payment_id);\r\n                    alert(\"Payment Successful\");\r\n                    // After successful payment, call the success callback\r\n                    successCallback();\r\n                }\r\n            };\r\n            const paymentObject = new window.Razorpay(options);\r\n            paymentObject.open();\r\n        } catch (error) {\r\n            alert(\"Failed to load Razorpay SDK\");\r\n        }\r\n    };\r\n\r\n    const submitForm = async () => {\r\n        const { Name, Email, Contact, message } = user;\r\n        if (!Name || !Email || !Contact || !message) {\r\n            alert(\"Please fill in all fields.\");\r\n            return;\r\n        }\r\n\r\n        // Call the Razorpay function to initiate the payment and provide a callback function\r\n        displayRazorpay(1000, () => {\r\n            // Proceed with the form submission\r\n            const options = {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    Name,\r\n                    Email,\r\n                    Contact,\r\n                    message\r\n                })\r\n            };\r\n            try {\r\n                fetch('https://donationfirebase-default-rtdb.firebaseio.com/UserData.json', options)\r\n                    .then((res) => {\r\n                        if (res.ok) {\r\n                            alert(\"Message Sent\");\r\n                        } else {\r\n                            alert(\"Error Occurred\");\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(\"An error occurred while submitting the form.\");\r\n                        console.error(error);\r\n                    });\r\n            } catch (error) {\r\n                alert(\"An error occurred while submitting the form.\");\r\n                console.error(error);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='form'>\r\n                <div className='container'>\r\n                    <form method='POST'>\r\n                        <input type='text' name='Name' placeholder='Your Name' value={user.Name} autoComplete='off' required onChange={data}></input>\r\n                        <input type='email' name='Email' placeholder='Email-id' value={user.Email} autoComplete='off' required onChange={data}></input>\r\n                        <input type='text' name='Contact' placeholder='Contact no.' value={user.Contact} autoComplete='off' required onChange={data}></input>\r\n                        <textarea name='message' placeholder='Enter Your Message' value={user.message} autoComplete='off' required onChange={data}></textarea>\r\n                        <button onClick={submitForm}>Submit and Donate</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}