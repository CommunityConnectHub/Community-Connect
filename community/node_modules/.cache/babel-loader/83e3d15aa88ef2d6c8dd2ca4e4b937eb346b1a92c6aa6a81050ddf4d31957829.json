{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Parul Pandey\\\\Dropbox\\\\PC\\\\Desktop\\\\CCH\\\\Community-Connect\\\\community\\\\src\\\\components\\\\form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [user, setUser] = useState({\n    Name: '',\n    Email: '',\n    Contact: '',\n    message: ''\n  });\n  const data = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleRazorpayAndSubmit = async () => {\n    // Handle Razorpay payment\n    const amountToDonate = 1000; // Set your desired amount\n    const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js');\n    if (!res) {\n      alert(\"You are offline... Failed to load Razorpay SDK\");\n    } else {\n      const options = {\n        key: 'rzp_test_OlgK0vFCXKjoRp',\n        currency: \"INR\",\n        amount: amountToDonate * 100,\n        name: \"Durgesh\",\n        description: \"Thanks For Donating\",\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n          alert(\"Payment Successful\");\n\n          // After successful payment, submit the form\n          submitForm();\n        },\n        prefill: {\n          name: \"Durgesh\"\n        }\n      };\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    }\n  };\n  const submitForm = async () => {\n    // Handle form submission\n    const {\n      Name,\n      Email,\n      Contact,\n      message\n    } = user;\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Name,\n        Email,\n        Contact,\n        message\n      })\n    };\n    const res = await fetch('https://donationfirebase-default-rtdb.firebaseio.com/UserData.json', options);\n    if (res.ok) {\n      alert(\"Message Sent\");\n    } else {\n      alert(\"Error Occurred\");\n    }\n  };\n  const loadScript = src => {\n    return new Promise(resolve => {\n      const script = document.createElement('script');\n      script.src = src;\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Name\",\n            placeholder: \"Your Name\",\n            value: user.Name,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"Email\",\n            placeholder: \"Email-id\",\n            value: user.Email,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Contact\",\n            placeholder: \"Contact no.\",\n            value: user.Contact,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            placeholder: \"Enter Your Message\",\n            value: user.message,\n            autoComplete: \"off\",\n            required: true,\n            onChange: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRazorpayAndSubmit,\n            children: \"Submit and Donate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Form, \"fHalAoBguYeP93k5Rahv4fyg2IY=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","user","setUser","Name","Email","Contact","message","data","e","target","name","value","handleRazorpayAndSubmit","amountToDonate","res","loadScript","alert","options","key","currency","amount","description","handler","response","razorpay_payment_id","submitForm","prefill","paymentObject","window","Razorpay","open","method","headers","body","JSON","stringify","fetch","ok","src","Promise","resolve","script","document","createElement","onload","onerror","appendChild","children","className","type","placeholder","autoComplete","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Parul Pandey/Dropbox/PC/Desktop/CCH/Community-Connect/community/src/components/form.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './form.css';\r\n\r\nconst Form = () => {\r\n    const [user, setUser] = useState({\r\n        Name: '',\r\n        Email: '',\r\n        Contact: '',\r\n        message: ''\r\n    });\r\n\r\n    const data = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleRazorpayAndSubmit = async () => {\r\n        // Handle Razorpay payment\r\n        const amountToDonate = 1000; // Set your desired amount\r\n        const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js');\r\n\r\n        if (!res) {\r\n            alert(\"You are offline... Failed to load Razorpay SDK\");\r\n        } else {\r\n            const options = {\r\n                key: 'rzp_test_OlgK0vFCXKjoRp',\r\n                currency: \"INR\",\r\n                amount: amountToDonate * 100,\r\n                name: \"Durgesh\",\r\n                description: \"Thanks For Donating\",\r\n                handler: function (response) {\r\n                    alert(response.razorpay_payment_id);\r\n                    alert(\"Payment Successful\");\r\n\r\n                    // After successful payment, submit the form\r\n                    submitForm();\r\n                },\r\n                prefill: {\r\n                    name: \"Durgesh\"\r\n                }\r\n            };\r\n\r\n            const paymentObject = new window.Razorpay(options);\r\n            paymentObject.open();\r\n        }\r\n    };\r\n\r\n    const submitForm = async () => {\r\n        // Handle form submission\r\n        const { Name, Email, Contact, message } = user;\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Name,\r\n                Email,\r\n                Contact,\r\n                message\r\n            })\r\n        };\r\n\r\n        const res = await fetch('https://donationfirebase-default-rtdb.firebaseio.com/UserData.json', options);\r\n\r\n        if (res.ok) {\r\n            alert(\"Message Sent\");\r\n        } else {\r\n            alert(\"Error Occurred\");\r\n        }\r\n    };\r\n\r\n    const loadScript = (src) => {\r\n        return new Promise((resolve) => {\r\n            const script = document.createElement('script');\r\n            script.src = src;\r\n            script.onload = () => {\r\n                resolve(true);\r\n            };\r\n            script.onerror = () => {\r\n                resolve(false);\r\n            };\r\n            document.body.appendChild(script);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='form'>\r\n                <div className='container'>\r\n                    <form method='POST'>\r\n                        <input type='text' name='Name' placeholder='Your Name' value={user.Name} autoComplete='off' required onChange={data}></input>\r\n                        <input type='email' name='Email' placeholder='Email-id' value={user.Email} autoComplete='off' required onChange={data}></input>\r\n                        <input type='text' name='Contact' placeholder='Contact no.' value={user.Contact} autoComplete='off' required onChange={data}></input>\r\n                        <textarea name='message' placeholder='Enter Your Message' value={user.message} autoComplete='off' required onChange={data}></textarea>\r\n\r\n                        {/* Use a single button to trigger Razorpay payment and form submission */}\r\n                        <button onClick={handleRazorpayAndSubmit}>Submit and Donate</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}